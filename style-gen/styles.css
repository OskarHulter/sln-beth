:root{
   --gradient-18: 
    linear-gradient(0deg,   hsla(0   100% 50% / 80%), hsla(0   100% 50% / 0) 75%),
    linear-gradient(60deg,  hsla(60  100% 50% / 80%), hsla(60  100% 50% / 0) 75%),
    linear-gradient(120deg, hsla(120 100% 50% / 80%), hsla(120 100% 50% / 0) 75%),
    linear-gradient(180deg, hsla(180 100% 50% / 80%), hsla(180 100% 50% / 0) 75%),
    linear-gradient(240deg, hsla(240 100% 50% / 80%), hsla(240 100% 50% / 0) 75%),
    linear-gradient(300deg, hsla(300 100% 50% / 80%), hsla(300 100% 50% / 0) 75%)
  ;
   --pink-0: #fff0f6;
   --gray-8: #343a40;
   --violet-0: #f3f0ff;
   --pink-5: #f06595;
   --size-5: 1.5rem;
   --size-4: 1.25rem;
   --animation-scale-down: scale-down .5s var(--ease-3);
   --animation-fade-out: fade-out .5s var(--ease-3);
   --ease-squish-5: cubic-bezier(.5, -.9, .1, 1.5);
   --ease-3: cubic-bezier(.25, 0, .3, 1);
}
/* Welcome ðŸŽ‰ */
/* Use Open-Props from NPM or CDN */
/* @import 'open-props/style'; */
/* @import 'https://unpkg.com/open-props'; */
/* not needed here because JIT Props adds what you use! */

/* 
 open-props normalize isn't required, but makes for a nice base.
 add this to see default styles for <details> and other HTM5 elements
 Bonus: normalize includes light and dark vars for adaptive theming */
 @import 'open-props/normalize';
 /* @import 'https://unpkg.com/open-props/normalize.min.css'; */
 @import 'open-props/buttons';
 
 html {
   /* try on some alt gradients why dont ya! */
   background-image: var(--gradient-18);
 }
 
 /* 
  As you use props, the PostCSS plugin     
  "jit-props" will add them to the stylesheet.
  see postcss.config.js for more 
 */
 
 a {
   /* try on some other link colors: violet, indigo, lime, orange, etc */
   color: var(--pink-0);
   text-shadow: 0 1px 0 var(--gray-8);
 }
 
 a:visited {
   color: var(--violet-0);
 }
 
 summary::marker {
   color: var(--pink-5);
 }
 
 body {
   display: grid;
   place-content: center;
   padding: var(--size-5);
 }
 
 main {
   display: grid;
   gap: var(--size-5);
   justify-items: start;
 }
 
 ul {
   padding-inline: var(--size-4);
 }
 
 h2 {
   display: grid;
   animation: var(--animation-scale-down) reverse,
     var(--animation-fade-out) reverse;
   animation-timing-function: var(--ease-squish-5);
   animation-duration: 1s;
 }
 
 @keyframes scale-down {
  to { transform: scale(.75) }
}
 
 @keyframes fade-out {
  to { opacity: 0 }
}
 